<template>
    <%
    var searchCount = 0;
    var row = 0;
    %>
    <% for(var i = 0; i < configList.~size; i++) { %>
        <% if(!configList[i].needTableId && configList[i].needPage) { searchCount ++; }%>
    <% } %>
    <view>
        <% if (searchCount > 0) { %>
        <view class="sticky">
            <% for(var i = 0; i < configList.~size; i++) { %>
            <% if(!configList[i].needTableId && configList[i].needPage) { row ++; %>
            <% if(row <= 1) { %>
            <uni-row>
                <view style="display: flex; align-items: center; justify-content: center;">
                    <uni-col :span="22">
                        <uni-search-bar v-model="searchFormState.${configList[i].fieldNameCamelCase}" placeholder="请输入${configList[i].fieldRemark}"  @confirm="loadData(true)" cancelButton="none"></uni-search-bar>
                    </uni-col>
                    <uni-col :span="2">
                        <view style="color: #2979ff;" @click="$refs.searchRef.open()">
                    	    <text>高级\n搜索</text>
                    	</view>
                    </uni-col>
                </view>
            </uni-row>
            <% } %>
            <% } %>
            <% } %>
        </view>
        <search ref="searchRef" :searchFormState="searchFormState" @confirm="loadData(true)"></search>
        <% } %>
        <view class="${busName}-list">
            <uni-list>
                <uni-list-item v-for="(item, index) in ${classNameFirstLower}Data" :key="index" :showArrow="false" :clickable="true" @tap="moreTapItem(item, index)">
                    <template v-slot:body>
                        <view class="item">
                            <% for(var i = 0; i < configList.~size; i++) { %>
                            <% if(!configList[i].needTableId && configList[i].whetherTable && configList[i].fieldNameCamelCase != 'tenantId') { %>
                            <view class="item-row">
                                <uni-row>
                                    <uni-col :span="4">
                                    	<view class="item-row-title">${configList[i].fieldRemark}</view>
                                    </uni-col>
                                    <uni-col :span="20">
                                    	<view class="item-row-content">{{ item.${configList[i].fieldNameCamelCase} }}</view>
                                    </uni-col>
                                </uni-row>
                            </view>
                            <% } %>
                            <% } %>
                        </view>
                    </template>
                </uni-list-item>
            </uni-list>
            <support-empty v-if="$utils.isEmpty(${classNameFirstLower}Data)" />
        </view>
        <!-- 新增悬浮按钮 -->
        <uni-fab
            v-if="hasPerm('mobile${className}Add')"
        	horizontal="right"
        	vertical="bottom"
        	direction="horizontal"
        	@fabClick="add"
        	:pattern="{
                color: '#7A7E83',
                backgroundColor: '#fff',
                selectedColor: '#007AFF',
                buttonColor: '#007AFF',
                iconColor: '#fff'
            }">
        </uni-fab>
        <more ref="moreRef" @handleOk="loadData(true)"></more>
    </view>
</template>

<script setup name="${busName}">
    <% if (searchCount > 0) { %>
    import search from './search.vue'
    <% } %>
    import SupportEmpty from "@/components/support-empty.vue"
    import { ${classNameFirstLower}Page } from '@/api/${moduleName}/${classNameFirstLower}Api'
    import more from './more.vue'
    import XEUtils from 'xe-utils'
    import { onLoad, onShow, onReady, onPullDownRefresh, onReachBottom } from "@dcloudio/uni-app"
    import { reactive, ref, getCurrentInstance } from "vue"

    const { proxy } = getCurrentInstance()
    const searchFormState = reactive({})
    const parameter = reactive({
    	current: 1,
    	size: 10
    })
    const ${classNameFirstLower}Data = ref([])
    const loadData = (isReset) => {
        if (isReset) {
        	parameter.current = 1
        	${classNameFirstLower}Data.value = []
        }
        Object.assign(parameter, searchFormState)
        ${classNameFirstLower}Page(parameter).then(res => {
            if (XEUtils.isEmpty(res?.data?.records)){
            	return
            }
            ${classNameFirstLower}Data.value = ${classNameFirstLower}Data.value.concat(res.data.records)
            parameter.current++
        }).finally(()=>{
          	uni.stopPullDownRefresh()
        })
    }
    loadData(true)
    onShow(() => {
    	uni.$once('formBack', (data) => {
    		loadData(true)
    	})
    })
    // 下拉刷新
    onPullDownRefresh(() => {
    	loadData(true)
    })
    // 上拉加载
    onReachBottom(() => {
    	loadData()
    })
    // 新增
    const add = () => {
    	uni.navigateTo({
    		url: '/pages/${moduleName}/${busName}/form'
    	})
    }
    // 更多操作
    const moreRef = ref()
    const moreClick = (record) => {
    	moreRef.value.open(record)
    }
</script>

<style lang="scss" scoped>
    .${classNameFirstLower}-list {
    	margin: 15upx;
    	border-radius: 5upx;
    	.item {
    		width: 100vw;
    		.item-row {
    			margin: 20upx 10upx;
    			.item-row-title {
    				font-size: 25upx;
    				color: #999;
    			}
    			.item-row-content {
    				font-size: 25upx;
    				text-align: right;
    			}
    		}
    	}
    	}
</style>
