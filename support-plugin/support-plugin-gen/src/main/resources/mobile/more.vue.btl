<template>
    <uni-popup ref="popupRef" type="bottom" safeArea>
        <view class="container">
            <uni-list :border="false">
        	    <uni-list-item v-if="hasPerm('mobile${className}Edit')" title="编辑" class="item" :clickable="true" @click="edit"/>
        		<uni-list-item v-if="hasPerm('mobile${className}Delete')" title="刪除" class="item" :clickable="true" @click="del"/>
        		<uni-list-item title="取消" class="item" :clickable="true" @click="cancel"/>
        	</uni-list>
        </view>
    </uni-popup>
</template>
<script setup name="${classNameFirstLower}More">
    import { ${classNameFirstLower}Delete } from '@/api/${moduleName}/${classNameFirstLower}Api'
    import modal from '@/plugins/modal'
    import { reactive, ref, getCurrentInstance } from "vue"

    const emits = defineEmits(['handleOk'])
    const popupRef = ref()
    const record = ref({})
    const open = (data) => {
    	record.value = data
    	popupRef.value.open("bottom")
    }
    // 编辑
    const edit = () => {
    	uni.navigateTo({
    		url: '/pages/${moduleName}/${busName}/form?id=' + record.value.id
    	})
    	popupRef.value.close()
    }
    // 删除
    const del = () => {
    	modal.confirm(`确定要删除吗？`).then(() => {
            ${classNameFirstLower}Delete([{
                id: record.value.id
            }]).then(res => {
                emits('handleOk')
                popupRef.value.close()
            })
    	})
    }
    // 取消
    const cancel = () => {
    	popupRef.value.close()
    }
    defineExpose({
    	open
    })
</script>
<style lang="scss" scoped>
    .container {
		margin: 15upx;
		border-radius: 5upx;
		padding: 5upx;
		background-color: $uni-white;
		.item {
			text-align:center;
		}
	}
</style>
